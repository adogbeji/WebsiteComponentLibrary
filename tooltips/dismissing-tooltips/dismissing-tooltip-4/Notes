This contains code for building a dismissing tooltip


Important Points:

1) Dismissing tooltips are used when you want the tooltip to hold a moderate to large amount
   of content
2) The tooltip is positioned on the left
3) The hoverable text and/or image is placed inside a div, with class="dismissing-tooltip__hover-content"
4) This div should be given a fixed width (eg. 50rem) to set the size of the hoverable content
5) The tooltip contents is placed inside another div, with class="dismissing-tooltip__content"
6) The div containing the hoverable text/image, and the div containing the tooltip contents should 
   then be put inside a container element like a div, with class="dismissing-tooltip"
7) Set the container div to position: relative in order to position the tooltip contents
8) The div with class="dismissing-tooltip__content" holds the actual tooltip contents. It's hidden by 
   default, but becomes visible when the user hovers over it
11) The div with class="dismissing-tooltip__content" should also be absolutely positioned relative to
    it parent (.dismissing-tooltip)
11) The div with class="dismissing-tooltip__content" should also be given a fixed width (eg. 45rem) to 
    set the size of the tooltip contents
12) To make it stand out, you might want to give the tooltip contents some shadow
13) For this, you could use the box-shadow property. However, it doesn't work on the pseudo-element
    used to create the arrow
14) At the moment, I'm not sure how to apply shadow to the pseudo-element used to create the arrow
15) So, until I figure it out, I won't be putting an arrow on the dropdown. I've simply commented out
    the code for now


--- CENTRING TOOLTIP CONTENTS START ---

1) To vertically centre the tooltip contents (.dismissing-tooltip__content), set the top coordinate 
   property to 50% and use the transform: translateY(-50%) rule
2) At the same time, the left coordinate property should be set to a value greater than 100% (eg. 105%)
3) This is to create space between the tooltip itself and the hoverable content

--- CENTRING TOOLTIP CONTENTS END ---


--- CLOSE ICON START ---

1) If you want users to be able to close the message, add a span tag to the tooltip
2) the span tag should be a direct child of .dismissing-tooltip__content
3) Use the HTML "&times;" entity to create the cross (x)
4) The HTML "&times;" entity actually takes up more vertical space than it needs
5) To fix this, set the line-height property to 0 or 1. Setting line-height: 0 is preferrable,
   and what's recommended
6) However, in this situation, you should actually set the line-height property to 0.7
7) For best practice, the size of the cross (x) should not be more than 2.6rem
8) In some cases, you may prefer to not have the close icon (.dismissing-tooltip__closebtn) at all
9) That's perfectly fine, and to do that, simply remove the close icon and JavaScript

--- CLOSE ICON END ---


--- TOOLTIP ARROW START ---

1) To create an arrow that should appear from a specific side of the tooltip, use an ::after
   pseudo-element
2) The tooltip is positioned on the LEFT of the hoverable text, with the arrow on RIGHT
3) The arrow itself is created using borders. This makes the tooltip look like a speech bubble
4) The border-width property specifies the size of the arrow. If you change it, also change the
   margin-left property to have the same value, but negative. This will keep the arrow centred
5) The border-color property is used to transform the content into an arrow. To create a right-
   facing arrow, set the left border to black, and the rest to transparent. If all sides are black,
   you'll end up with a black square box!
6) At the moment, I'm not sure how to apply shadow to the pseudo-element used to create the arrow
7) So, until I figure it out, I won't be putting an arrow on the dropdown. I've simply commented out
   the code for now

--- TOOLTIP ARROW END ---


--- FINAL THOUGHTS ---

1) Dismissing tooltips are designed to hold moderate to large amounts of text
2) However, if you plan to put quite a small amount of text, then it's probably best to use a 
   normal tooltip
3) That being said, a dismissing tooltip can still be used for holding a small amount of text,
   if you just want the dismissing functionality
4) For your own projects, you may want to apply more padding to the tooltip
5) In that case, just add your own modifier class to .dismissing-tooltip__content
6) It may also be worth changing the position of the close icon (.dismissing-tooltip__closebtn) too
7) Feel free to customise it until you get the specific look you desire