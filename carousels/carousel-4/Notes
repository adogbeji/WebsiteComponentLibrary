This contains code for building a Carousel Slideshow with CSS & JavaScript


Important Points:

1) The entire carousel and its contents should be put inside a wrapper div of a 
   fixed width (eg. 60%)
2) The width of the wrapper div controls the width of the carousel
3) The carousel itself should be the direct child of the wrapper div
4) Make the carousel a grid container with a fixed number of columns and rows
5) The number of rows determines the height of the grid
6) Although you can change the number of rows, five is ideal
7) Each row has a height of 5vw, which is just perfect. If you want it smaller, set it to 3vw
8) It's important to always have an ODD number of rows, so that the controls can always be
   positioned exactly in the middle
9) NOTE: The carousel should have the same background colour as the page!
10) This type of carousel consists of multiple smaller slides next to each other, with indicators 
    at the bottom
11) The slideshow section (.carousel__slides) is a grid item, and should be made to occupy the
    entire grid
12) Now, for some reason, CSS Grid and Flexbox simply don't work on it. Why?
13) So, you can't use the slideshow section (.carousel__slides) to position the individual slides
14) The way to get around this is to create a child element (.carousel__slide-gallery) which will then
    contain the slides
15) This slide gallery (.carousel__slide-gallery) should now be a flex container (display: flex), and 
    will position the slides side-by-side
16) For the slides to be positioned side-by-side, you must give the slide gallery a width GREATER
    than 100%. Set it to something like 160%
17) Now since its width is greater than 100%, the slides will overflow the slide gallery
18) To fix this, set the slideshow section (.carousel__slides) to overflow: hidden. This serves to
    keep the overflown slides hidden


10) The indicators and controls should be positioned on the grid as grid items
11) Control the position of the indicator dots by using the justify-self & align-self properties,
    along with margin if necessary
12) The slideshow sections are also grid items, and should be made to occupy the entire grid
13) For this type of carousel, the controls are positioned at the bottom
14) The controls should be put in a separate row whose height is set to min-content

14) The icons used are: chevron (left) & chevron (right)


--- TOOLTIP SECTION START ---

1) The tooltip section (.carousel__tooltip-section) is the part where the tooltip is shown when the
   user hovers over it
2) For a start, the hoverable content (.carousel__dismissing-tooltip-hover-content) should not have 
   any width set
3) This is to ensure that it always takes up the full available width
4) If you only have a small amount of content, the carousel slide might seem a bit smaller 
   (vertically) than normal
5) In such cases, you should consider appying some padding to the hoverable content 
   (.carousel__dismissing-tooltip-hover-content)
6) Alternatively, you can make the carousel slide (.carousel__slide) a grid container, then set the
   appropriate row gap between its children, .carousel__text-photo-box-1, .carousel__tooltip-section 
   & .carousel__link-box
7) A third approach would be to apply appropriate margins to any of the children where necessary

--- TOOLTIP SECTION END ---