This contains code for building a Carousel Slideshow with CSS & JavaScript


Important Points:

1) Carousel slideshows are used in many different types of websites
2) They're used to display things such as testimonials/reviews, products, courses etc
3) It's such a common feature that yuo simply need to know how to build it
4) Although it's a very common website component, it's also quite complex as well
5) Here, you'll find the code to build it all from scratch


--- CAROUSEL STRUCTURE START ---

1) The entire carousel and its contents should be put inside a wrapper div of a fixed width (eg. 60%)
2) The width of the wrapper div controls the width of the carousel
3) The carousel itself (.carousel__content) should be the direct child of the wrapper div (.carousel)
4) Make the carousel a grid container with a fixed number of columns and rows
5) The number of rows determines the height of the grid
6) Set the two outer columns to be max-content, so they take up the exact space needed by the 
   controls
7) NOTE: If you're not using a background image, then you should give the carousel a background 
   colour!
8) The indicators and controls should be positioned on the grid as grid items
9) Control the position of the indicator dots by using the justify-self & align-self properties,
   along with margin if necessary
10) To create space between the indicators, you have two options 
11) The first option is to apply left and right margin to the indicator dots (.carousel__dot) 
    themselves
12) The second option is to apply Flexbox to .carousel__indicators and use the column-gap property
    to create space between the indicators
10) The slideshow sections are also grid items, and should be made to occupy the entire grid
11) Give each image a surrounding element and set the width & height to 100%, so that it has the 
    SAME dimensions as its parent element, the slideshow section
12) Set the width & height of each image to 100%, and use the object-fit property to preserve its 
    aspect ratio
13) Alternatively, you can just use the image on its own without a parent element
14) In that case, give the image a width & height of 100%, and set object-fit: cover
15) For this type of carousel, there's also a mini slideshow underneath with images corresponding
    to the ones in the main slideshow
16) This mini slideshow should be positioned right at the bottom, and made to span the entire 
    width of the grid
17) For each slide, there's also a short description section
18) The slide description should be positioned on the grid in a separate row, just below the main
    slideshow, and directly above the mini slideshow
19) The row containing the slide description should be given a height of 2.5-3vw for best appearanace
20) Setting the row height to min-content will make it a bit too small compared to the rest of the
    carousel
21) Each slide can optionally have some caption text
22) In that case, use absolute positioning to position the caption text relative to its parent 
    element, the slideshow section
23) The caption text should be put in a span tag, and its default size is determined by its font size 
    and the amount of padding applied
24) Ideally, caption text should be positioned at the top left corner of each slide. Use the width
    property to control the caption text width
25) If you change the caption text width (eg. 20%), then you should also apply the text-align: center
    rule to position the text in the middle 

--- CAROUSEL STRUCTURE END ---


--- HOW THE CAROUSEL WORKS START ---

1) Give all carousel slides the same class (.carousel__slide) and target them with JavaScript
2) It's important that you use the querySelectorAll() method, so that you get a NodeList containing
   all the slides in your carousel
3) Give all carousel mini slide photos the same class (.carousel__small-photo) and target them 
   with JavaScript
4) It's important that you use the querySelectorAll() method, so that you get a NodeList containing
   all the mini slide photos in your carousel
5) Give all indicators the same class (.carousel__dot) and target them with JavaScript
6) It's important that you use the querySelectorAll() method, so that you get a NodeList containing
   all the indicators in your carousel  
7) You should also give the slide description (.carousel__slide-description), previous (.carousel__prev) 
   and next (.carousel__next) controls their own specfic classes to target them using JavaScript
8) When the user clicks on the controls, it will trigger an event handler which then functions to
   display the correct slide
9) Clicking on the indicators will also trigger the same effect 
10) The logic for displaying the correct slide dependends on setting a minimum, maximum & current 
    slide index value
11) The current slide index value should be set to zero initially, but changes as the user presses
    the controls and indicators
12) Hiding the controls will change the grid structure, causing the indicators not to remain centred
13) So, if you want to hide controls, remove the indicators from the carousel

14) However, if you want to have the indicators, then set them to cursor: not-allowed
15) This will keep the controls, but display a sign to discourage the user from clicking on them
16) How to prevent the next control from registering clicks if slide index is greater than
    maxIndexValue - 1 ??

--- HOW THE CAROUSEL WORKS END ---




24) For best practice, always define image dimensions in percentages. This helps to make them more 
    flexible and responsive
25) After building the carousel, you must then use media queries to adapt it to smaller screens
26) You'll have to reduce the size of the indicators, controls, text and images to make the carousel
    fully responsive