This contains code for building a search bar


Important Points:

1) Search bars are used in web apps to allow users search or filter out things
2) They can also be put into a navigation bar, which is a very common use case


--- SEARCH BAR STRUCTURE START ---

1) The form (.search-bar) is the overall wrapper whose width is set relative to its parent
2) The form itself is also a grid container with three child elements
3) The first child is a div of class .search-bar__search-input-box
4) The div of class .search-bar__search-input-box contains the input, the search icon and clear icon
5) The second child is a div of class .search-bar__search-dropdown-content
6) The div of class .search-bar__search-dropdown-content contains the dropdown contents or more
   specifically, the actual search results
7) NOTE: There's also an equivalent dropdown which is displayed if there are no results
8) The third child is the button (.search-bar__search-button). This is optional and can be removed
   if it's not needed
9) Yes, it's perfectly fine to have a search box without a button!


10) However, in that case, you should also change the grid structure accordingly
11) The grid structure consists of two rows and two columns
12) The second column holds the button, so it's best to just set it to max-content
13) Setting it to max-content means that the column will take up the exact width of the button
14) The children should be positioned on the grid by naming the grid cells
15) This is a highly effective way of positioning items on a small grid
16) NOTE: It's really important that you don't set the width of any of the children, as they're all
    grid items and should occupy the grid cell they've been assigned to
17) Sometimes, you might want the search bar to expand slightly when the user focuses on it
18) This is totally optional, but there's no way of doing it directly in CSS that I'm aware of.
    So, you need to use JavaScript to add this functionality
19) To make the seach bar expand, there's no need to touch the grid structure at all
20) Instead, just change the width of the form (.search-bar)
21) However, just changing the width would usually be a bit jerky and feel a bit unnatural
22) So, to make it smooth, use the transition property to animate the change in width
23) In addition, since the dropdown is also a grid item, its width will also change in proportion
    to everything else
24) Since .search-bar__search-input-box is a grid item, it will take the full height of its grid cell 
    by default
24) The button (.search-bar__search-button) also does the same thing
25) So, for the input (.search-bar__search-input) and button to have the same visual height, you must 
    give .search-bar__search-input-box the SAME background colour as the input!
26) This is really, really important because otherwise, the input will appear smaller than the button,
    which just looks a bit odd
27) As a side note, if you change the width of the form, you may need to adjust the position of the 
    search bar close icon (.search-bar__search-clear-input) 
28) The search bar close icon is absolutely positioned relative to .search-bar__search-input-box
    


13) However, setting the column width to max-content means that it'll take up the exact with of 
    the button  
14) In reality, it's much better to set the column width to fit-content() instead
15) This is because fit-content() allows you to restrict the column size, and therefore you can 
    control the button width

--- SEARCH BAR STRUCTURE END ---


--- INPUT ELEMENT START ---

1) There’s an important point to note about the HTML input element
2) By default, the input element doesn’t inherit the font-family property of the global document
3) The same applies to the font-size and color properties
4) Therefore, you must set its value to inherit to force inheritance!
5) For the magnifying glass icon to actually show up on the left side of the input, there are three
   strategies you can use
6) For the first strategy, you use the SVG element on its own, and then apply a negative left margin
   to the input (.mobilenav__search-input)
7) Now, to compensate for the negative left margin placed on the input, you must also apply a 
   NEGATIVE translateX() of the same value to the button
8) The problem with this technique is that since the input is shifted left, it's VERY difficult to 
   make the dropdown perfectly aligned on its left
9) For the second strategy, wrap the SVG element in a button and then use the translateX() function
   to position the icon on top of the input
10) The problem with this strategy is that it leaves a space on the left, meaning that the dropdown
    won't be perfectly aligned on its left 
11) For the third strategy, set the input's parent to position: relative, then use absolute
    positioning to put the icon on the left side of the input
12) The input's parent should be a flex container set to align-items: center. Therefore all its 
    children will be vertically centred
13) The third strategy is the best, and is what you should stick with at all times

--- INPUT ELEMENT END ---


--- POSITIONING SEARCH ICON START ---

1) For the magnifying glass icon to actually show up on the left side of the input, there are three
   strategies you can use
2) For the first strategy, you use the SVG element on its own, and then apply a negative left margin
   to the input (.mobilenav__search-input)
3) Now, to compensate for the negative left margin placed on the input, you must also apply a 
   NEGATIVE translateX() of the same value to the button
4) The problem with this technique is that since the input is shifted left, it's VERY difficult to 
   make the dropdown perfectly aligned on its left
5) For the second strategy, wrap the SVG element in a button and then use the translateX() function
   to position the icon on top of the input
6) The problem with this strategy is that it leaves a space on the left, meaning that the dropdown
   won't be perfectly aligned on its left 
7) For the third strategy, set the input's parent to position: relative, then use absolute
   positioning to put the icon on the left side of the input
8) The input's parent should be a flex container set to align-items: center. Therefore all its 
   children will be vertically centred

--- POSITIONING SEARCH ICON END ---