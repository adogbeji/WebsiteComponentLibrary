This contains code for building a search bar


Important Points:

1) Search bars are used in web apps to allow users search or filter out things
2) They can also be put into a navigation bar, which is a very common use case


--- SEARCH BOX STRUCTURE START ---

1) The form (.search-bar) is the overall wrapper whose width is set relative to its parent
2) The form itself is also a grid container with three chid elements
3) The first child is a div (.search-bar__search-input-box-container) which itself has a child
   div (.search-bar__search-input-box)
4) The div of class .search-bar__search-input-box contains the input, the search icon and clear icon
5) The second child is a div (.search-bar__search-dropdown-content-box) which itself has a child
   div (.search-bar__search-dropdown-content)
6) The div of class .search-bar__search-dropdown-content contains the dropdown contents or more
   specifically, the actual search results
7) NOTE: There's also an equivalent dropdown which is displayed if there are no results
8) The third child is the button (.search-bar__search-button). This is optional and can be removed
   if it's not needed
9) Yes, it's perfectly fine to have a search box without a button!
10) The children should be positioned on the grid by naming the grid cells
11) This is a highly effective way of positioning items on a small grid

--- SEARCH BOX STRUCTURE END ---


--- POSITIONING SEARCH ICON START ---

1) For the magnifying glass icon to actually show up on the left side of the input, there are three
   strategies you can use
2) For the first strategy, you use the SVG element on its own, and then apply a negative left margin
   to the input (.mobilenav__search-input)
3) Now, to compensate for the negative left margin placed on the input, you must also apply a 
   NEGATIVE translateX() of the same value to the button
4) The problem with this technique is that since the input is shifted left, it's VERY difficult to 
   make the dropdown perfectly aligned on its left
5) For the second strategy, wrap the SVG element in a button and then use the translateX() function
   to position the icon on top of the input
6) The problem with this strategy is that it leaves a space on the left, meaning that the dropdown
   won't be perfectly aligned on its left 
7) For the third strategy, set the input's parent to position: relative, then use absolute
   positioning to put the icon on the left side of the input
8) The input's parent should be a flex container set to align-items: center. Therefore all its 
   children will be vertically centred

--- POSITIONING SEARCH ICON END ---