This contains code for building a course accordion


Important Points:

1) A course accordion is exclusively used to build e-learning platforms
2) It's an unusual component in the sense that it's a WHOLE PAGE structure. But more importantly,
   it's a cross between an accordion and a carousel
3) Regarding the BEM class naming system, it's perfectly fine to have a block and an element
   together (eg .course-accordion__header) without a parent block (.course-accordion). This is 
   perfectly fine and legal if they are both grid items!

--- HEADER SECTION MODAL START ---

1) The header section (.course-accordion__header) contains a modal (.course-accordion__header-modal)
   which allows the user to copy the course link and share it on social media
2) Inside the modal, there's a readonly input which display the course link. There's also a button
   that allows the user to copy the link
3) The input and button should be put inside a parent element (.course-accordion__header-modal-readonly-input-box)
4) This parent itself should be a flex container
5) The width of the input is set using the flex-basis property. For best practice, you should use 
   the flex shorthand property instead
6) The input width is relative to its parent element (.course-accordion__header-modal-readonly-input-box)
7) However, the width shouldn't be too much or else the button will be clipped off the right side
8) If you want the input and button to exactly fit the parent element (.course-accordion__header-modal-readonly-input-box), 
   then set flex-grow: 1 on the input. Once again, it's preferrable to use the flex shorthand 
   property (flex: 1) instead
9) Making the input & button exactly fit the parent is actually better. It simply looks better and 
   more uniform. This is what you should stick with going forward!


--- HEADER SECTION MODAL END ---


--- VIDEO SECTION START ---

1) The video section is where the course video will be displayed
2) It consists of two main parts: the video content & user activity bar
3) Make the video section a grid container with a fixed number of columns and rows
4) The number of rows determines the height of the grid
5) Although you can change the number of rows, seven is ideal
6) Set the two outer columns to be max-content, so they take up the exact space needed by the 
   controls
7) It's important to always have an ODD number of rows, so that the controls can always be
   positioned exactly in the middle
8) You should also have an odd number of columns so that the play button can always be positioned
   in the middle both horizontally and vertically
8) The controls should be positioned on the grid as grid items


--- VIDEO SECTION END ---


4) Icons used are: add circle, arrow back, check, clear, closed caption (off), closed caption, cog,
   dots (three vertical), facebook, instagram, linkedin, twitter, fast forward, rewind, file download