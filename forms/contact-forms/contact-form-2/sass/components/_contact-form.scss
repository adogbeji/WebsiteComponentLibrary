.form {

    &__group {
        margin-bottom: 1.6rem;
        font-size: 1.45rem;  // Inherited by inputs & textareas

        &--checkbox {
            display: flex;
            justify-content: flex-start;
            align-items: center;

            column-gap: .4rem;  // Creates space between checkbox & text

            & > input {
                order: -1;  // Puts checkbox on the left & text on the right
            }

            & > input[type="checkbox"] {
                -webkit-appearance: none;
                appearance: none;
                width: 2.5rem;
                height: 2.5rem;
                // border-radius: .5rem;
                // cursor: pointer;
                background-color: #FFFFFF;
                border-radius: .5rem;
                cursor: pointer;
                outline: none;  // Prevents outline from showing when checkbox is selected


                position: relative;  // Used to position checkmark (below)

                &:hover {
                    background-color: #A5A5A5;
                }

                &:checked {
                    background-color: #0083E8;
                }

                &:checked::after {
                    display: block;  // Shows checkmark
                }
            }

            & > input[type="checkbox"]::after {
                content: '';
                display: inline-block;
                width: 1.8rem;
                height: 1.8rem;
                // margin-right: -.6rem;  // Brings text closer to icon

                // Older browsers
                background-image: url('../images/SVG/check.svg');
                background-size: cover;


                 // Newer browsers
                 @supports (-webkit-mask-image: url()) or (mask-image: url()) {
                    background-color: #000000;
                    -webkit-mask-image: url('../images/SVG/check.svg');
                    -webkit-mask-size: cover;  // Makes icon cover entire element
                    mask-image: url('../images/SVG/check.svg');
                    mask-size: cover;
                    background-image: none;  // Prevents background image (above) from being used
                }

                position: absolute;  // Code below horizontally and vertically centres checkmark ("tick")
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);

                display: none;  // Hides checkmark
            }
        }
    }

    &__group > label {
        font-size: 1.45rem;  // Controls size of form labels
    }

    &__control {
        width: 100%;  // Makes inputs full width
        padding: 1.2rem;  // Controls size of inputs 
        margin-top: .6rem;  // Creates space between inputs & labels
        border: .1rem solid #CCCCCC;
        border-radius: .4rem;  // Creates rounded edges
        resize: vertical;  // Allow the user to vertically resize the textarea (not horizontally)
        font-size: inherit;  // Inherits font size set on parent element 

        &::-webkit-input-placeholder {  // Only works in Chrome & Safari browsers
            color: #808080;
        }

        &:focus {
            outline: none;
            // box-shadow: .2rem -.2rem .48rem 0 #622EFF, -.2rem .2rem .48rem 0 #622EFF;
            box-shadow: .2rem -.2rem .48rem .15rem #6570EA, -.2rem .2rem .48rem .15rem #6570EA;
        }
    }

    &__small-text {
        font-size: 1.35rem;
    }

    &__group > textarea {
        height: 28rem;  // Controls height of textarea
    }

    // &__misc-text-box {
    //     background-color: grey;  // Testing
    // }

    &__misc-text {
        // font-size: 1.8rem;
        font-size: 1.6rem; 
    }

    &__accordion-box {
        // background-color: #00FF00;  // Testing
        width: 60%;  // Controls size of accordion
    }

    &__accordion {
        /* Style the buttons that are used to open and close the accordion panel */
        // background-color: #EEEEEE;
        background-color: #F2F2F2;  // Same colour as form container (.form-box)
        transition: all .4s;
        font-size: 1.5rem;
        color: #444444;
        text-align: left;  // Keeps text left-aligned
        width: 100%;  // Makes button occupy full width of accordion (required)
        display: block;
        padding: 1.8rem;
        padding-left: 0;  // Keeps text left-aligned
        min-width: 8rem;
        border: none;  // Removes default button border
        outline: none;  // Removes outline
        cursor: pointer;

        // Use Flexbox to position icon (preferred)
        display: flex;
        justify-content: space-between;  // Puts button text & icon on opposite sides
    
        // TECHNIQUE #1: Use HTML Entities (?)    
        // &::after {
        //     content: '\02795';  // Unicode character for "plus" sign (+)
        //     font-size: 1.3rem;
        //     color: #777777;

        //     // Use float property to position icon
        //     // float: right;
        //     // margin-left: .5rem;
        // }
    
        /* The .accordion__active class will be added by JavaScript */
        // &__active, &:hover {
        //     background-color: #CCCCCC;
        // }

        // &__active::after {
        //     content: '\2796';  // Unicode character for "minus" sign (-)
        // }

        // TECHNIQUE #2: Include the SVG in CSS (preferred)
        &::after {
            content: '';
            display: inline-block;
            width: 2rem;
            height: 2rem;

            // Older browsers
            background-image: url('../images/SVG/add.svg');
            background-size: cover;


            // Newer browsers
            @supports (-webkit-mask-image: url()) or (mask-image: url()) {
                background-color: #333333;
                -webkit-mask-image: url('../images/SVG/add.svg');
                -webkit-mask-size: cover;  // Makes icon cover entire element
                mask-image: url('../images/SVG/add.svg');
                mask-size: cover;
                background-image: none;  // Prevents background image (above) from being used
            }
        }

        /* The .active class will be added by JavaScript */
        // &-active, &:hover {
        //     background-color: #CCCCCC;
        // }

        &-active::after {
            content: '';
            display: inline-block;
            width: 2rem;
            height: 2rem;
            // margin-right: .15rem;  // Moves icon to left slightly

            // Older browsers
            background-image: url('../images/SVG/remove.svg');
            background-size: cover;


            // Newer browsers
            @supports (-webkit-mask-image: url()) or (mask-image: url()) {
                background-color: #333333;
                -webkit-mask-image: url('../images/SVG/remove.svg');
                -webkit-mask-size: cover;  // Makes icon cover entire element
                mask-image: url('../images/SVG/remove.svg');
                mask-size: cover;
                background-image: none;  // Prevents background image (above) from being used
            }
        }

    
        /* The accordion panel */
        &-panel {
            // background-color: #FFFFFF;
            padding: 0 1.8rem;
            padding-left: 0;  // Makes radio button align with text (recommended)
            display: none;  // Hides content by default (remove if using code below!)
            overflow: hidden;
        

            /* This class will be added by JavaScript to display the accordion contents when the 
                user clicks */
            &--show {
                display: block;
            }
        }

        // &-radio-group-container {
        //     background-color: grey;  // Testing
        // }

        &-radio-group {

            &-qs {
                // background-color: #FFFF00;  // Testing
                list-style-type: none;
            }

            // &-q1 {}

            &-q1, &-q2, &-q3 {
                margin-top: 1.4rem;  // Creates space above question
            }

            // &-text-box {
            //     background-color: #FF0000;  // Testing
            // }

            &-text {
                // font-size: 2.1rem;
                font-size: 1.6rem;  // Same as .form__misc-text (above)
                color: #000000;
                text-transform: uppercase;
            }

            &{
                // background-color: #FFFF00;  // Testing
                list-style-type: none;
            }

            &-item {
                // & > input[type="radio"] {
                //     // flex: 0 0 10%;  // Testing
                //     display: none;  //Hides default radio button
                // }

                border: .1rem solid #A9A6A6;  // Makes radio button group stand out
                padding: 1rem;  // Creates space around radio buttons (recommended)
                margin-top: .6rem;  // Creates space between radio buttons and labels (same as .form__control)

                display: flex;
                justify-content: flex-start;

                & > label:first-child {
                    // background-color: #0000FF;  // Testing
                    cursor: pointer;

                    // flex: 0 0 10%;

                    display: flex;
                    // justify-content: center;
                    justify-content: flex-start;
                    align-items: center;

                    gap: .6rem;  // Creates space between label text & radio button

                    & > input[type="radio"] {
                        order: -1;  // Puts label on the left of radio button
                        display: none;  // Hides the default radio button (required)
                    }
                }

                & > input[type="text"] {
                    font-size: 1.8rem;  // Sets size of input text (same as radio button label)
                }
            }

            &-label {
                // font-size: 1.8rem;
                font-size: 1.6rem;  // Same as .form__accordion-radio-group-text (above)
            }

            &-button {  // Custom Radio Button
                // width: 3rem;
                // height: 3rem;
                width: 2rem;  // Don't make them less than 2rem, otherwise dot isn't perfectly centred
                height: 2rem;
                border: .3rem solid #4189E0;
                border-radius: 50%;  // Creates perfect circle
                display: inline-block;
    
                position: relative;  // Used to position radio button dot (::after) below
    
                // position: absolute;
                // left: 0;
    
                &::after {  // Used to create radio button dot
                    content: '';
                    display: block;
                    width: 1rem;
                    height: 1rem;
                    border-radius: 50%;  // Creates perfect circle
                    background-color: #2196F3;  // Makes radio button dot show up (required)
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    opacity: 0;  // Hides radio button dot (required)
                    transition: opacity .2s;  // Used to anmate opacity of radio button dot (recommended!)
                }
            }

            // & > label {

            //     & > input[type="radio"]:checked + .form__accordion-radio-group-button::after {
            //         opacity: 1;  // Shows radio button dot (required)
            //     }
            // }

            &  label {

                & > input[type="radio"]:checked + .form__accordion-radio-group-button::after {
                    opacity: 1;  // Shows radio button dot (required)
                }
            }

            // &-item > input[type="radio"]:checked + &-label::before {
            //     width: 1rem;
            //     height: 1rem;
            //     border: .65rem solid #FFFFFF;
            //     background-color: #4189E0;
            // }

            // &-item > input[type="radio"]:checked + &-label {
            //     background-color: #4189E0;
            //     color: #FFFFFF;
            // }
        }
    }

    &__btn {
        font-size: 1.6rem;
        display: inline-block;
        padding: 1.25rem 1.2rem;
        min-width: 8rem;
        border: none;  // Removes default button border
        outline: none;  // Removes outline
        cursor: pointer;


        // Size Modifiers
        &--lg {
            padding: 1.5rem 1.2rem;
        }

        &--sm {
            padding: .85rem 1.2rem;
        }

        &--block {  // Creates full-width 'block' button
            width: 100%;
            display: block;
        }

        // Rounded Edges Modifier
        &--rounded {
            border-radius: .4rem;  // Same border radius as input, select and textarea
        }

        // Colour Modifiers
        &--primary {
            background-color: #0E49B5;
            color: #FFFFFF;

            &:hover {
                background-color: darken(#0E49B5, 5%);
            }
        }

    &--secondary {
        background-color: #808080;
        color: #050505;

        &:hover {
            background-color: darken(#808080, 5%);
        }
    }

    &--danger {
        background-color: #F44336;
        color: #050505;

        &:hover {
            background-color: lighten(#F44336, 5%);
        }
    }

    &--success {
        background-color: #04AA6D;
        color: #050505;

        &:hover {
            background-color: lighten(#04AA6D, 5%);
        }
    }

    &--info {
        background-color: #2196F3;
        color: #050505;

        &:hover {
            background-color: darken(#2196F3, 5%);
        }
    }

    &--warning {
        background-color: #FF9800;
        color: #050505;
        
        &:hover {
            background-color: lighten(#FF9800, 5%);
        }
    }

    &--dark {
        background-color: #050505;
        color: #FFFFFF;

        &:hover {
            color: darken(#FFFFFF, 5%);            
        }
    }

    &--royal {
        background-color: #BD00AA;
        color: #FFFFFF;

        &:hover {
            background-color: darken(#BD00AA, 5%);
        }
    }


    // Outline Colour Modifiers
    &--outline-primary {
        background-color: transparent;
        border: .15rem solid #0E49B5;

        &:hover {
            background-color: #0E49B5;
            color: #FFFFFF;
        }
    }

    &--outline-secondary {
        background-color: transparent;
        border: .15rem solid #808080;

        &:hover {
            background-color: #808080;
            color: #050505;
        }
    }

    &--outline-danger {
        background-color: transparent;
        border: .15rem solid #F44336;

        &:hover {
            background-color: #F44336;
            color: #050505;
        }
    }

    &--outline-success {
        background-color: transparent;
        border: .15rem solid #04AA6D;

        &:hover {
            background-color: #04AA6D;
            color: #050505;
        }
    }

    &--outline-info {
        background-color: transparent;
        border: .15rem solid #2196F3;
        color: #050505;

        &:hover {
            background-color: #2196F3;
            color: #050505;
        }
    }

    &--outline-warning {
        background-color: transparent;
        border: .15rem solid #FF9800;
        color: #050505;

        &:hover {
            background-color: #FF9800;
            color: #050505;
        }
    }

    &--outline-dark {
        background-color: transparent;
        border: .15rem solid #050505;
        color: #050505;

        &:hover {
            background-color: #050505;
            color: #FFFFFF;
        }
    }

    &--outline-royal {
        background-color: transparent;
        border: .15rem solid #BD00AA;
        color: #050505;

        &:hover {
            background-color: #BD00AA;
            color: #FFFFFF;
        }
    }
    }
}